# link-spyder CI/CD Pipeline
name: Heroku-deploy-test

# Github Action triggers
on:
  push:
    branches: [ test-deploy ]
  pull_request:
    branches: [ test-deploy ]

# CI/CD Jobs
jobs:

  lint:
    # Runner
    name: Linter
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    # CI Steps
    steps:
      - uses: actions/checkout@v2
      - name: Set up python ${{ matrix.python-version }} for lint
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Install dependecies
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      # Execute linter
      - name: Tox lint
        run: |
          tox -e lint

  test:
    # Setup database
    services:
      db:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9]
    # Set environmental variables from Github secrets
    env:
      PROJECT_ENV: ${{ secrets.PROJECT_ENV }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
    steps:
      # Checkout repository
      - uses: actions/checkout@v1
      # Setup python
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Install dependecies
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          pip install tox tox-gh-actions
      - name: Log env vars
        run: |
          env
      # Execute test
      - name: Tox test
        run: |
          tox -e test

  # Build Process
  build:
    # Build Runner
    runs-on: ubuntu-latest

    # Build Steps
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Deploy to Heroku
        env:
          HEROKU_API_TOKEN: ${{secrets.HEROKU_API_KEY}}
          HEROKU_APP_NAME: "link-spyder"
          HEROKU_EMAIL: "${{secrets.HEROKU_EMAIL}}"
          APPDIR: "linkspyder"
        # Runs a set of commands using the runners shell
        if: github.ref == 'refs/heads/master' && job.status == 'success'
        run: |
          git push https://heroku:$HEROKU_API_TOKEN@git.heroku.com/$HEROKU_APP_NAME.git origin/master:master